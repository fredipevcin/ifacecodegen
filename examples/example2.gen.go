// Code generated by ifacecodegen tool. DO NOT EDIT.
// Source: examples/interface.go

package examples

import (
	"context"
	"log"
	"time"
)

func NewLoggerFoo(s Foo) Foo {
	return &loggerFoo{
		s: s,
	}
}

type loggerFoo struct {
	s Foo
}

func (l *loggerFoo) Load(_param1 context.Context) (_result1 Entity, _result2 error) {
	defer func(begin time.Time) {
		var err error = _result2
		log.Print("method", "load", "took", time.Since(begin), "error", err)
	}(time.Now())
	return l.s.Load(_param1)
}

func (l *loggerFoo) Save(_param1 []Entity) (_result1 error) {
	defer func(begin time.Time) {
		var err error = _result1
		log.Print("method", "save", "took", time.Since(begin), "error", err)
	}(time.Now())
	return l.s.Save(_param1)
}

func (l *loggerFoo) IsValid() (_result1 bool) {
	defer func(begin time.Time) {
		var err error
		log.Print("method", "is_valid", "took", time.Since(begin), "error", err)
	}(time.Now())
	return l.s.IsValid()
}

func (l *loggerFoo) ValidateMulti(_param1 ...Entity) {
	defer func(begin time.Time) {
		var err error
		log.Print("method", "validate_multi", "took", time.Since(begin), "error", err)
	}(time.Now())
	l.s.ValidateMulti(_param1...)
}

func (l *loggerFoo) Multi(p1 string, p2 string) (r1 string, r2 string) {
	defer func(begin time.Time) {
		var err error
		log.Print("method", "multi", "took", time.Since(begin), "error", err)
	}(time.Now())
	return l.s.Multi(p1, p2)
}
